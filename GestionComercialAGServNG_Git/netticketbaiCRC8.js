// Generated JS from Java: net.ticketbai.CRC8 -----

/*
/**
 * @properties={typeid:24,uuid:"BA28990E-ED5A-4FCF-99A6-CCD2DD2F568C"}
 */

/*function net_ticketbai_CRC8() {

   net_ticketbai_CRC8_c._clInit();
   scopes.javasys.jv_Object.call(this);
}*/

/*
/**
 * @properties={typeid:35,uuid:"3C975F88-F2AE-4B04-8AEA-5F37035E4B60",variableType:-4}
 */

/*var net_ticketbai_CRC8_c = scopes.sccore.sc_newClass("netticketbaiCRC8", net_ticketbai_CRC8, scopes.javasys.jv_Object, null);
*/

/**
 * TODO generated, please specify type and doc for the params
 * @param  input
 *
 * @return {Object}
 * @properties={typeid:24,uuid:"A449BE12-CDBD-403A-B316-4768CD7972AC"}
 */
function calculate(input)  {
   //_clInit();
   //var data = input.getBytes(net_ticketbai_CRC8_c.UTF_8);
  // var data = input.getBytes(UTF_8);
   var data = new java.lang.String(input).getBytes('UTF-8');
   var len = data.length;
   var crc = 0;
   //for (var i = 0; i < len; i++) crc = net_ticketbai_CRC8_c.crc8_table[(crc ^ data[i]) & 0xff];
   for (var i = 0; i < len; i++) 
   {
	   //crc = crc8_table[(crc ^= data[i]) & 0xff];
	   //crc = crc8_table[(crc ^= data[i]) &= 0xff];
	   
	   //var n = crc ^= data[i];
	   //crc = n &= 0xff;
	   
	   crc =(crc ^ data[i]) % 256
	   crc = crc8_table[crc]
   }
   //return scopes.javasys.String_c.format("%03d", crc & 0xFF);
   //return String.format("%03d", crc & 0xFF);
   crc = utils.numberFormat((crc & 0xFF),'000')
   return crc
}

/**
 * @type {String}
 *
 * @properties={typeid:35,uuid:"25C2CBA5-EB63-4608-8869-A8DC283006F8"}
 */
var UTF_8 = '';

/**
 * @type {Array}
 *
 * @properties={typeid:35,uuid:"C6C0B1D6-54E1-4AFB-92E8-CCAB200A322A",variableType:-4}
 */
var crc8_table = [ (0x00), (0x07), (0x0E), (0x09), (0x1C), (0x1B), (0x12), (0x15), (0x38), (0x3F), (0x36),
(0x31), (0x24), (0x23), (0x2A), (0x2D), (0x70), (0x77), (0x7E), (0x79), (0x6C), (0x6B),
(0x62), (0x65), (0x48), (0x4F), (0x46), (0x41), (0x54), (0x53), (0x5A), (0x5D), (0xE0),
(0xE7), (0xEE), (0xE9), (0xFC), (0xFB), (0xF2), (0xF5), (0xD8), (0xDF), (0xD6), (0xD1),
(0xC4), (0xC3), (0xCA), (0xCD), (0x90), (0x97), (0x9E), (0x99), (0x8C), (0x8B), (0x82),
(0x85), (0xA8), (0xAF), (0xA6), (0xA1), (0xB4), (0xB3), (0xBA), (0xBD), (0xC7), (0xC0),
(0xC9), (0xCE), (0xDB), (0xDC), (0xD5), (0xD2), (0xFF), (0xF8), (0xF1), (0xF6), (0xE3),
(0xE4), (0xED), (0xEA), (0xB7), (0xB0), (0xB9), (0xBE), (0xAB), (0xAC), (0xA5), (0xA2),
(0x8F), (0x88), (0x81), (0x86), (0x93), (0x94), (0x9D), (0x9A), (0x27), (0x20), (0x29),
(0x2E), (0x3B), (0x3C), (0x35), (0x32), (0x1F), (0x18), (0x11), (0x16), (0x03), (0x04),
(0x0D), (0x0A), (0x57), (0x50), (0x59), (0x5E), (0x4B), (0x4C), (0x45), (0x42), (0x6F),
(0x68), (0x61), (0x66), (0x73), (0x74), (0x7D), (0x7A), (0x89), (0x8E), (0x87), (0x80),
(0x95), (0x92), (0x9B), (0x9C), (0xB1), (0xB6), (0xBF), (0xB8), (0xAD), (0xAA), (0xA3),
(0xA4), (0xF9), (0xFE), (0xF7), (0xF0), (0xE5), (0xE2), (0xEB), (0xEC), (0xC1), (0xC6),
(0xCF), (0xC8), (0xDD), (0xDA), (0xD3), (0xD4), (0x69), (0x6E), (0x67), (0x60), (0x75),
(0x72), (0x7B), (0x7C), (0x51), (0x56), (0x5F), (0x58), (0x4D), (0x4A), (0x43), (0x44),
(0x19), (0x1E), (0x17), (0x10), (0x05), (0x02), (0x0B), (0x0C), (0x21), (0x26), (0x2F),
(0x28), (0x3D), (0x3A), (0x33), (0x34), (0x4E), (0x49), (0x40), (0x47), (0x52), (0x55),
(0x5C), (0x5B), (0x76), (0x71), (0x78), (0x7F), (0x6A), (0x6D), (0x64), (0x63), (0x3E),
(0x39), (0x30), (0x37), (0x22), (0x25), (0x2C), (0x2B), (0x06), (0x01), (0x08), (0x0F),
(0x1A), (0x1D), (0x14), (0x13), (0xAE), (0xA9), (0xA0), (0xA7), (0xB2), (0xB5), (0xBC),
(0xBB), (0x96), (0x91), (0x98), (0x9F), (0x8A), (0x8D), (0x84), (0x83), (0xDE), (0xD9),
(0xD0), (0xD7), (0xC2), (0xC5), (0xCC), (0xCB), (0xE6), (0xE1), (0xE8), (0xEF), (0xFA),
(0xFD), (0xF4), (0xF3) ];

/**
 * @properties={typeid:24,uuid:"86560A36-DF9E-4D11-A1B4-0BE3E84E2A36"}
 */
function _clInit() {
   //if (net_ticketbai_CRC8_c.hasOwnProperty("_clInited")) return;
   //net_ticketbai_CRC8_c._clInited = true;
   
      //net_ticketbai_CRC8_c.UTF_8 = "UTF-8";
      UTF_8 = "UTF-8";
      
      //net_ticketbai_CRC8_c.crc8_table = scopes.sccore.sc_initArray(scopes.javasys.Number_c, 1,
      crc8_table = [ (0x00), (0x07), (0x0E), (0x09), (0x1C), (0x1B), (0x12), (0x15), (0x38), (0x3F), (0x36),
                 (0x31), (0x24), (0x23), (0x2A), (0x2D), (0x70), (0x77), (0x7E), (0x79), (0x6C), (0x6B),
                 (0x62), (0x65), (0x48), (0x4F), (0x46), (0x41), (0x54), (0x53), (0x5A), (0x5D), (0xE0),
                 (0xE7), (0xEE), (0xE9), (0xFC), (0xFB), (0xF2), (0xF5), (0xD8), (0xDF), (0xD6), (0xD1),
                 (0xC4), (0xC3), (0xCA), (0xCD), (0x90), (0x97), (0x9E), (0x99), (0x8C), (0x8B), (0x82),
                 (0x85), (0xA8), (0xAF), (0xA6), (0xA1), (0xB4), (0xB3), (0xBA), (0xBD), (0xC7), (0xC0),
                 (0xC9), (0xCE), (0xDB), (0xDC), (0xD5), (0xD2), (0xFF), (0xF8), (0xF1), (0xF6), (0xE3),
                 (0xE4), (0xED), (0xEA), (0xB7), (0xB0), (0xB9), (0xBE), (0xAB), (0xAC), (0xA5), (0xA2),
                 (0x8F), (0x88), (0x81), (0x86), (0x93), (0x94), (0x9D), (0x9A), (0x27), (0x20), (0x29),
                 (0x2E), (0x3B), (0x3C), (0x35), (0x32), (0x1F), (0x18), (0x11), (0x16), (0x03), (0x04),
                 (0x0D), (0x0A), (0x57), (0x50), (0x59), (0x5E), (0x4B), (0x4C), (0x45), (0x42), (0x6F),
                 (0x68), (0x61), (0x66), (0x73), (0x74), (0x7D), (0x7A), (0x89), (0x8E), (0x87), (0x80),
                 (0x95), (0x92), (0x9B), (0x9C), (0xB1), (0xB6), (0xBF), (0xB8), (0xAD), (0xAA), (0xA3),
                 (0xA4), (0xF9), (0xFE), (0xF7), (0xF0), (0xE5), (0xE2), (0xEB), (0xEC), (0xC1), (0xC6),
                 (0xCF), (0xC8), (0xDD), (0xDA), (0xD3), (0xD4), (0x69), (0x6E), (0x67), (0x60), (0x75),
                 (0x72), (0x7B), (0x7C), (0x51), (0x56), (0x5F), (0x58), (0x4D), (0x4A), (0x43), (0x44),
                 (0x19), (0x1E), (0x17), (0x10), (0x05), (0x02), (0x0B), (0x0C), (0x21), (0x26), (0x2F),
                 (0x28), (0x3D), (0x3A), (0x33), (0x34), (0x4E), (0x49), (0x40), (0x47), (0x52), (0x55),
                 (0x5C), (0x5B), (0x76), (0x71), (0x78), (0x7F), (0x6A), (0x6D), (0x64), (0x63), (0x3E),
                 (0x39), (0x30), (0x37), (0x22), (0x25), (0x2C), (0x2B), (0x06), (0x01), (0x08), (0x0F),
                 (0x1A), (0x1D), (0x14), (0x13), (0xAE), (0xA9), (0xA0), (0xA7), (0xB2), (0xB5), (0xBC),
                 (0xBB), (0x96), (0x91), (0x98), (0x9F), (0x8A), (0x8D), (0x84), (0x83), (0xDE), (0xD9),
                 (0xD0), (0xD7), (0xC2), (0xC5), (0xCC), (0xCB), (0xE6), (0xE1), (0xE8), (0xEF), (0xFA),
                 (0xFD), (0xF4), (0xF3) ];
      ;
}

/**
 * @properties={typeid:35,uuid:"D0D2D4EF-8CF3-48D6-99F9-A78A9F841EB8",variableType:-4}
 */
var POLY = {
	  CRC8 : 0xd5,
	  CRC8_CCITT : 0x07,
	  CRC8_DALLAS_MAXIM : 0x31,
	  CRC8_SAE_J1850 : 0x1D,
	  CRC_8_WCDMA : 0x9b
	};

/**
 * TODO generated, please specify type and doc for the params
 * @param polynomial
 * 
 * @return {Object}
 *
 * @properties={typeid:24,uuid:"9717B578-B8BF-417D-97B0-BF0B313529C9"}
 */
function generateTable(polynomial)
{
  var csTable = []  
  for ( var i = 0; i < 256; ++i ) {
    var curr = i
    for ( var j = 0; j < 8; ++j ) {
      if ((curr & 0x80) !== 0) {
        curr = ((curr << 1) ^ polynomial) % 256
      } else {
        curr = (curr << 1) % 256
      }
    }
    csTable[i] = curr 
  }  
  return csTable
}

/**
 * TODO generated, please specify type and doc for the params
 * @param byte_array
 * 
 * @return {Number}
 *
 * @properties={typeid:24,uuid:"48A9AFB4-28A2-435B-BD76-ADBAE9B752EF"}
 */
function checksum(byte_array) {
	  var c = this.initial_value;
	  for (var i = 0; i < byte_array.length; i++ ) 
	    c = this.table[(c ^ byte_array[i]) % 256] 
	  return c;
	}

//"Class" for calculating CRC8 checksums...

/**
	 * TODO generated, please specify type and doc for the params
	 * @param polynomial
	 * @param initial_value
	 *
	 * @properties={typeid:24,uuid:"CE41765C-7B9D-4AA5-970D-91267CDA9F05"}
	 */
function CRC8(polynomial, initial_value) { // constructor takes an optional polynomial type from CRC8.POLY
	  if (polynomial == null) polynomial = '0x07'//CRC8.POLY.CRC8_CCITT
	  this.table = CRC8generateTable(polynomial);
	  this.initial_value = initial_value;
	}

// Returns the 8-bit checksum given an array of byte-sized numbers

/**
 * TODO generated, please specify type and doc for the params
 * @param byte_array
 * @return
 * @properties={typeid:24,uuid:"5127411D-17C6-4019-A9C0-DF38462A8176"}
 */
function CRC8prototypechecksum(byte_array) {
	  var c = this.initial_value;

	  for (var i = 0; i < byte_array.length; i++ ) 
	    c = this.table[(c ^ byte_array[i]) % 256] 

	  return c;
	}

// returns a lookup table byte array given one of the values from CRC8.POLY 

/**
 * TODO generated, please specify type and doc for the params
 * @param polynomial
 * @return
 * @properties={typeid:24,uuid:"814AC2A3-2107-4EE2-BCF2-9C3A6C72C32D"}
 */
function CRC8generateTable(polynomial)
	{
	  var csTable = [] // 256 max len byte array
	  
	  for ( var i = 0; i < 256; ++i ) {
	    var curr = i
	    for ( var j = 0; j < 8; ++j ) {
	      if ((curr & 0x80) !== 0) {
	        curr = ((curr << 1) ^ polynomial) % 256
	      } else {
	        curr = (curr << 1) % 256
	      }
	    }
	    csTable[i] = curr 
	  }
	    
	  return csTable
	}

// This "enum" can be used to indicate what kind of CRC8 checksum you will be calculating

/**
 * TODO generated, please specify type and doc for the params
 * @param valorentrada
 * @return
 * @properties={typeid:24,uuid:"DD5CCE5B-B043-4EB3-B89F-93242E5BFAD2"}
 * @SuppressWarnings(unused)
 */
function entrada(valorentrada) {
	  var sample_text = valorentrada;
	  //var byte_array = sample_text.split('').map(function(x){return x.charCodeAt(0)});
	  var byte_array = new java.lang.String(sample_text).getBytes('UTF-8');
	  var crc8 = new CRC8(null,0);
	  var csum = /*crc8.*/checksum(byte_array);
	  //FileMaker.PerformScriptWithOption ( 'pegasalida', checksum, '0' );
	  return utils.numberFormat(csum,'000')
	}
